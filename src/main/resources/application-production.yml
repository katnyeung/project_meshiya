server:
  port: 8080

spring:
  # Database Configuration (Production) - Disabled for DynamoDB migration
  # datasource:
  #   url: jdbc:mariadb://meshiya-db.cd8qake2a3w4.eu-west-2.rds.amazonaws.com:3306/meshiya
  #   username: ${DB_USERNAME:meshiyauser}
  #   password: ${DB_PASSWORD}
  
  # JPA Configuration - Disabled for DynamoDB migration
  # jpa:
  #   hibernate:
  #     ddl-auto: update
  #   show-sql: false
  #   properties:
  #     hibernate:
  #       dialect: org.hibernate.dialect.MariaDBDialect
  
  data:
    redis:
      host: ${REDIS_HOST:redis-10889.c338.eu-west-2-1.ec2.redns.redis-cloud.com}
      port: ${REDIS_PORT:10889}
      password: ${REDIS_PASSWORD}
      timeout: 2000ms
  
  websocket:
    allowed-origins: "http://3.8.131.90:8080,http://localhost:8080"
    
  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

meshiya:
  diner:
    max-seats: 8
    ai-response-delay: 3000
    max-context-messages: 20
  user:
    timeout:
      minutes: 10

# AWS Configuration
aws:
  region: eu-west-2
  batch:
    image-queue: meshiya-image-queue
    tts-queue: meshiya-tts-queue

# MinIO Configuration (now pointing to S3)
minio:
  endpoint: https://s3.eu-west-2.amazonaws.com
  access-key: ${AWS_ACCESS_KEY_ID}
  secret-key: ${AWS_SECRET_ACCESS_KEY}
  bucket:
    default: meshiya-user-images
    tts: meshiya-tts-audio
    food-images: meshiya-food-images

# DynamoDB Configuration
dynamodb:
  table:
    name: ${DYNAMODB_TABLE_NAME:meshiya-data}
    region: ${AWS_REGION:eu-west-2}

# RunPod Configuration (GPU processing alternative to AWS Batch)
runpod:
  api:
    key: ${RUNPOD_API_KEY:}  # RunPod API key from environment
  image:
    endpoint: ${RUNPOD_IMAGE_ENDPOINT:}  # RunPod image generation endpoint URL
  tts:
    endpoint: ${RUNPOD_TTS_ENDPOINT:}  # RunPod TTS endpoint URL

# Image Generation Configuration (supports both AWS Batch and RunPod)
image:
  generation:
    enabled: true
    mode: ${IMAGE_MODE:runpod}  # Options: aws-batch, runpod
    timeout: 300000  # 5 minutes timeout for jobs
  storage:
    type: s3

# TTS Configuration (supports both AWS Batch and RunPod)
tts:
  mode: ${TTS_MODE:runpod}  # Options: aws-batch, runpod
  timeout: 120000  # 2 minutes timeout for jobs
  format: mp3  # Audio format
  voice:
    default: ${TTS_DEFAULT_VOICE:am_michael}  # Default voice for Master responses
  enabled: ${TTS_ENABLED:true}  # Enable/disable TTS functionality
  storage:
    type: s3
    ttl-hours: 2  # Audio files expire after 2 hours

# LLM Configuration
llm:
  chat:
    provider: perplexity
    api:
      url: https://api.perplexity.ai/chat/completions
      key: ${PERPLEXITY_API_KEY}
    model: sonar
    timeout: 30000

  order:
    provider: perplexity
    api:
      url: https://api.perplexity.ai/chat/completions
      key: ${PERPLEXITY_API_KEY}
    model: sonar
    timeout: 15000

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
  show-actuator: false